{"version":3,"sources":["api/index.ts","api/config.ts","pages/singerdetail/components/singerModal/index.tsx","pages/singerdetail/components/singerTable/index.tsx","pages/singerdetail/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["hide","apiObj","addSinger","params","axios","post","getSinger","deleteSinger","SingerModal","props","isShow","singerName","singerDescription","singerImg","onInputChange","onConfirm","onCancel","title","visible","maskClosable","onOk","Item","label","name","rules","required","message","placeholder","value","onChange","e","allowClear","action","listType","icon","UploadOutlined","singerTable","singerArr","onDelete","Column","Table","dataSource","dataIndex","render","text","record","size","onClick","SingerDetail","useState","setIsShow","setSingerArr","setName","setDescription","a","data","body","colObj","Modal","confirm","content","okText","cancelText","console","log","_id","useEffect","then","res","type","target","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","config","top","onRequestSuccess","loading","_t","Date","now","onRequestFail","err","Promise","reject","onResponseSuccess","onResponseFail","interceptors","request","use","response","axiosConfig","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b205be6.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { message } from 'antd'\r\n\r\naxios.defaults.baseURL = 'http://localhost:3002'\r\n\r\nmessage.config({\r\n  top: 150\r\n})\r\n\r\n\r\n\r\nlet hide: any\r\n\r\nconst onRequestSuccess = (config: any) => {\r\n  hide = message.loading('加载中')\r\n  if (config.params) config.params._t = Date.now()\r\n  return config\r\n}\r\n\r\nconst onRequestFail = (err: any) => {\r\n  hide()\r\n  return Promise.reject(err)\r\n}\r\n\r\n// TODO: 添加http请求错误处理\r\nconst onResponseSuccess = (res: any) => {\r\n  hide()\r\n  return res.data\r\n} \r\n\r\nconst onResponseFail = (res: any) => {\r\n  hide()\r\n  return Promise.reject(res)\r\n}\r\n\r\nconst AxiosConfig = () => {\r\n  axios.interceptors.request.use(onRequestSuccess, onRequestFail)\r\n  axios.interceptors.response.use(onResponseSuccess, onResponseFail)\r\n}\r\n\r\n\r\nexport default AxiosConfig","import axios from 'axios';\r\n\r\nconst apiObj = {\r\n  addSinger: (params: any = {}) => {\r\n    return axios.post('/singer/addSinger', params)\r\n  },\r\n\r\n  getSinger: (params: any = {}) => {\r\n    return axios.post('/singer/getSinger', params)\r\n  },\r\n\r\n  deleteSinger: (params: any = {}) => {\r\n    return axios.post('/singer/deleteSinger', params)\r\n  }\r\n}\r\n\r\nexport default apiObj","import React, {useState, ChangeEvent, KeyboardEvent, MouseEvent} from 'react';\r\n// import InfoForm from '../infoForm/index'\r\nimport { Form, Input, Button, Upload, Modal } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport apiObj from '../../../../api/config' \r\n\r\n// 1-1. 姓名  singerName\r\n// 1-2. 描述  singerDescription\r\n// 1-3. 图片  singerImg\r\n// 1-4. 是否显示 isShow\r\n\r\n// 事件\r\n// 2-1 确认保存 onConfirm\r\n// 2-2 取消 onCancel \r\n\r\ninterface singerModal {\r\n  isShow: boolean,\r\n  singerName: string,\r\n  singerDescription: string,\r\n  singerImg: string,\r\n  onInputChange: (e: ChangeEvent<HTMLInputElement>, type: string) => void,\r\n  onConfirm: () => void,\r\n  onCancel: (e: MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst SingerModal = (props: singerModal) => {\r\n\r\n  const { \r\n    isShow = false, \r\n    singerName = '', \r\n    singerDescription = '',\r\n    singerImg = '',\r\n    onInputChange = () => {},\r\n    onConfirm = () => {},\r\n    onCancel = () => {}\r\n  } = props\r\n\r\n \r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"添加歌手\"\r\n        visible={isShow}\r\n        maskClosable={false}\r\n        onOk={onConfirm}\r\n        onCancel={onCancel}\r\n      >\r\n        {singerName}\r\n        {singerDescription}\r\n        {singerImg}\r\n        <Form>\r\n          <Form.Item\r\n              label=\"singerName\"\r\n              name=\"singerName\"\r\n              rules={[{required: true, message: '请输入姓名'}]}>\r\n              <Input  \r\n              placeholder=\"Basic usage\"\r\n              \tvalue={singerDescription}\r\n                onChange={(e) => onInputChange(e, 'singerName')}\r\n                allowClear={true}/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n              label=\"singerDescription\"\r\n              name=\"singerDescription\">\r\n              <Input\r\n                value={singerName}\r\n                onChange={(e) => onInputChange(e, 'singerDescription')}\r\n                allowClear={true}\r\n              />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n                  <Button icon={<UploadOutlined />}>点击上传</Button>\r\n              </Upload>\r\n          </Form.Item>\r\n        \r\n\r\n      </Form>\r\n\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingerModal","import React, {MouseEvent} from 'react';\r\nimport { Space, Table } from 'antd'\r\n\r\n// 1-1. 姓名 singerName\r\n// 1-2. 描述 singerDescription\r\n// 1-3. 所有的数据 dataArr\r\n\r\n// 2-1. 编辑 onModify\r\n// 2-2. 删除 onDelete\r\n\r\ninterface singer {\r\n  singerName?: string,\r\n  singerDescription?: string\r\n  singerImg?: string\r\n}\r\n\r\ninterface tableProps {\r\n  singerArr: Array<singer>,\r\n  onDelete: (e: MouseEvent<HTMLElement>, colObj: Object) => void\r\n}\r\n\r\nconst singerTable = (props: tableProps) => {\r\n\r\n  const { \r\n    singerArr = [],\r\n    onDelete = () => {}\r\n  } = props\r\n  const { Column } = Table\r\n  return (\r\n    <Table dataSource={singerArr} >\r\n\r\n      <Column title=\"姓名\" dataIndex=\"singerName\" key=\"singerName\"/>\r\n      <Column title=\"描述\" dataIndex=\"singerDescription\" key=\"singerDescription\"/>\r\n      <Column\r\n        title=\"Action\"\r\n        key=\"action\"\r\n        render={(text, record: any) => (\r\n          <Space size=\"middle\">\r\n            <a>查看</a>\r\n            <a onClick={(e) => onDelete(e, record)}>删除</a>\r\n          </Space>\r\n        )}\r\n      />\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default singerTable\r\n\r\n\r\n\r\n","import './index.less';\r\nimport React, {\r\n  FC, \r\n  useState, useEffect, \r\n  MouseEvent, ChangeEvent\r\n} from 'react';\r\nimport apiObj from '../../api/config'\r\nimport SingerModal from './components/singerModal/index'\r\nimport SingerTable from './components/singerTable/index'\r\nimport { Button, Modal } from 'antd';\r\n\r\ninterface singer {\r\n  _id?: string,\r\n  singerName?: string,\r\n  singerDescription?: string\r\n  singerImg?: string\r\n}\r\n\r\n\r\nconst SingerDetail: FC = () => {\r\n\r\n  const [isShow = true, setIsShow ] = useState<boolean>(false)\r\n  const [singerArr, setSingerArr] = useState<Array<singer>>([])\r\n\r\n  const [singerName = '', setName = () => {}] = useState('')\r\n  const [singerDescription = '', setDescription = () => {}] = useState('')\r\n  const [singerImg = '', setImg = () => {}] = useState('')\r\n\r\n  // 获取singer数据\r\n  function getSinger(singerName: string = '') {\r\n    const params = {\r\n      singerName\r\n    }\r\n\r\n    apiObj\r\n      .getSinger(params)\r\n      .then((res: any) => {\r\n        setSingerArr(res.body.data)\r\n      })\r\n  }\r\n\r\n  // input 输入框事件\r\n  function onInputChange(e: ChangeEvent<HTMLInputElement>, type: string) {\r\n    if (type === 'singerName') {\r\n      setName(e.target.value)\r\n    } else if (type === 'singerDescription') {\r\n      setDescription(e.target.value)\r\n    }\r\n  }\r\n\r\n  async function onConfirm () {\r\n    const params = {\r\n      singerName,\r\n      singerDescription\r\n    }\r\n    let res = await apiObj.addSinger(params)\r\n    let data: any = await apiObj.getSinger()    \r\n    setSingerArr(data.body.data)\r\n    \r\n    setIsShow(false)\r\n  }\r\n\r\n  function onCancel(e: MouseEvent<HTMLElement>) {\r\n    return setIsShow(false)\r\n  }\r\n\r\n  function onAdd(e: MouseEvent<HTMLElement>) {\r\n    return setIsShow(true)\r\n  }\r\n\r\n  async function onDelete(e: MouseEvent<HTMLElement>, colObj: singer) {\r\n    const modal = Modal.confirm({\r\n      content: '是否删除?',\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        console.log(colObj, 'idididid');\r\n        const params = {\r\n          _id: colObj._id\r\n        }\r\n        let res = await apiObj.deleteSinger(params)\r\n        let data: any = await apiObj.getSinger()    \r\n        setSingerArr(data.body.data)\r\n      }\r\n    })\r\n  \r\n  }\r\n\r\n  useEffect(() => {\r\n    getSinger()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={onAdd}>\r\n        添加\r\n      </Button>\r\n      <SingerModal \r\n        isShow={isShow}\r\n        singerName={singerName}\r\n        singerDescription={singerDescription}\r\n        singerImg={singerImg}\r\n        onConfirm={onConfirm}\r\n        onInputChange={onInputChange}\r\n        onCancel={onCancel}/>\r\n      <SingerTable\r\n        singerArr={singerArr}\r\n        onDelete={onDelete} \r\n        />\r\n    </>\r\n  )\r\n} \r\n\r\nexport default SingerDetail","import React, {FC} from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport SingerModal from './pages/singerdetail/index';\nimport { Button } from 'antd'\nimport './App.css';\n\nconst App: FC = () => (\n  <HashRouter>\n\n    <div className=\"App\">\n      <h1>more music, more than music</h1>\n      <div className=\"main_container\">\n        <SingerModal/>\n      </div>\n    </div>\n \n\n  </HashRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axiosConfig from './api' \n\naxiosConfig()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}