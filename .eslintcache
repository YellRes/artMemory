[{"E:\\javascript\\artMemory\\src\\index.tsx":"1","E:\\javascript\\artMemory\\src\\reportWebVitals.ts":"2","E:\\javascript\\artMemory\\src\\App.tsx":"3","E:\\javascript\\artMemory\\src\\api\\index.ts":"4","E:\\javascript\\artMemory\\src\\pages\\singerdetail\\index.tsx":"5","E:\\javascript\\artMemory\\src\\api\\config.ts":"6","E:\\javascript\\artMemory\\src\\pages\\singerdetail\\components\\singerTable\\index.tsx":"7","E:\\javascript\\artMemory\\src\\pages\\singerdetail\\components\\singerModal\\index.tsx":"8"},{"size":568,"mtime":1607819823674,"results":"9","hashOfConfig":"10"},{"size":440,"mtime":1607819823677,"results":"11","hashOfConfig":"10"},{"size":1435,"mtime":1608430151152,"results":"12","hashOfConfig":"10"},{"size":1091,"mtime":1608208362673,"results":"13","hashOfConfig":"10"},{"size":3148,"mtime":1608216801234,"results":"14","hashOfConfig":"10"},{"size":371,"mtime":1608208362673,"results":"15","hashOfConfig":"10"},{"size":1268,"mtime":1608215746961,"results":"16","hashOfConfig":"10"},{"size":2306,"mtime":1608216863195,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4dpd1n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"E:\\javascript\\artMemory\\src\\index.tsx",[],["40","41"],"E:\\javascript\\artMemory\\src\\reportWebVitals.ts",[],"E:\\javascript\\artMemory\\src\\App.tsx",["42","43"],"import React, {FC} from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport SingerModal from './pages/singerdetail/index';\r\nimport { Layout, Menu, Breadcrumb } from 'antd'\r\nimport { UserOutlined, CustomerServiceOutlined, FileTextOutlined } from '@ant-design/icons';\r\nimport './App.css';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst App: FC = () => (\r\n  <HashRouter>\r\n\r\n    <div className=\"App\">\r\n      \r\n      <Layout style={{\"width\": \"100%\"}}>\r\n \r\n          <h1 >more music, more than music</h1>\r\n\r\n\r\n        <Layout style={{\"width\": \"100%\"}}>\r\n\r\n          <Sider width={200} className=\"site-layout-background\">\r\n            <Menu mode=\"inline\">\r\n              <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"歌手详情\"></SubMenu>\r\n              <SubMenu key=\"sub2\" icon={<FileTextOutlined />} title=\"歌曲详情\"></SubMenu>\r\n              <SubMenu key=\"sub3\" icon={<CustomerServiceOutlined />} title=\"好词句\"></SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n\r\n          <Layout style={{\"width\": \"100%\"}}>\r\n\r\n                <Content className={'flex_center'}>\r\n                  <div className=\"main_container\">\r\n                    <SingerModal/>\r\n                  </div>\r\n                </Content>\r\n        \r\n          </Layout>\r\n         \r\n        </Layout>\r\n\r\n        \r\n   \r\n      </Layout>\r\n\r\n      \r\n    </div>\r\n \r\n\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","E:\\javascript\\artMemory\\src\\api\\index.ts",[],"E:\\javascript\\artMemory\\src\\pages\\singerdetail\\index.tsx",["44","45","46","47"],"import './index.less';\r\nimport React, {\r\n  FC, \r\n  useState, useEffect, \r\n  MouseEvent, ChangeEvent\r\n} from 'react';\r\nimport apiObj from '../../api/config'\r\nimport SingerModal from './components/singerModal/index'\r\nimport SingerTable from './components/singerTable/index'\r\nimport { Button, Modal } from 'antd';\r\n\r\ninterface singer {\r\n  _id?: string,\r\n  singerName?: string,\r\n  singerDescription?: string\r\n  singerImg?: string\r\n}\r\n\r\n\r\nconst SingerDetail: FC = () => {\r\n\r\n  const [isShow = true, setIsShow ] = useState<boolean>(false)\r\n  const [singerArr, setSingerArr] = useState<Array<singer>>([])\r\n\r\n  const [singerName = '', setName = () => {}] = useState('')\r\n  const [singerDescription = '', setDescription = () => {}] = useState('')\r\n  const [singerImg = '', setImg = () => {}] = useState('')\r\n\r\n  // 获取singer数据\r\n  function getSinger(singerName: string = '') {\r\n    const params = {\r\n      singerName\r\n    }\r\n\r\n    apiObj\r\n      .getSinger(params)\r\n      .then((res: any) => {\r\n        setSingerArr(res.body.data)\r\n      })\r\n  }\r\n\r\n  // input 输入框事件\r\n  function onInputChange(e: ChangeEvent<HTMLInputElement>, type: string) {\r\n    if (type === 'singerName') {\r\n      setName(e.target.value)\r\n    } else if (type === 'singerDescription') {\r\n      setDescription(e.target.value)\r\n    }\r\n  }\r\n\r\n  async function onConfirm () {\r\n    const params = {\r\n      singerName,\r\n      singerDescription\r\n    }\r\n    let res = await apiObj.addSinger(params)\r\n    let data: any = await apiObj.getSinger()    \r\n    setSingerArr(data.body.data)\r\n    \r\n    setIsShow(false)\r\n  }\r\n\r\n  function onCancel(e: MouseEvent<HTMLElement>) {\r\n    return setIsShow(false)\r\n  }\r\n\r\n  function onAdd(e: MouseEvent<HTMLElement>) {\r\n    return setIsShow(true)\r\n  }\r\n\r\n  async function onDelete(e: MouseEvent<HTMLElement>, colObj: singer) {\r\n    const modal = Modal.confirm({\r\n      content: '是否删除?',\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        console.log(colObj, 'idididid');\r\n        const params = {\r\n          _id: colObj._id\r\n        }\r\n        let res = await apiObj.deleteSinger(params)\r\n        let data: any = await apiObj.getSinger()    \r\n        setSingerArr(data.body.data)\r\n      }\r\n    })\r\n  \r\n  }\r\n\r\n  async function onModify(e: MouseEvent<HTMLElement>, colObj: singer) {\r\n    const { _id } = colObj\r\n    let result: any = await apiObj.getSinger({singerId: _id}) \r\n    \r\n    const {singerName, singerDescription} = result.body.data[0]\r\n    setName(singerName)\r\n    setDescription(singerDescription)\r\n    setIsShow(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSinger()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={onAdd}>\r\n        添加\r\n      </Button>\r\n      <SingerModal \r\n        isShow={isShow}\r\n        singerName={singerName}\r\n        singerDescription={singerDescription}\r\n        singerImg={singerImg}\r\n        onConfirm={onConfirm}\r\n        onInputChange={onInputChange}\r\n        onCancel={onCancel}/>\r\n      <SingerTable\r\n        singerArr={singerArr}\r\n        onModify={onModify}\r\n        onDelete={onDelete} \r\n        />\r\n    </>\r\n  )\r\n} \r\n\r\nexport default SingerDetail","E:\\javascript\\artMemory\\src\\api\\config.ts",[],"E:\\javascript\\artMemory\\src\\pages\\singerdetail\\components\\singerTable\\index.tsx",["48","49"],"import React, {MouseEvent} from 'react';\r\nimport { Space, Table } from 'antd'\r\n\r\n// 1-1. 姓名 singerName\r\n// 1-2. 描述 singerDescription\r\n// 1-3. 所有的数据 dataArr\r\n\r\n// 2-1. 编辑 onModify\r\n// 2-2. 删除 onDelete\r\n\r\ninterface singer {\r\n  singerName?: string,\r\n  singerDescription?: string\r\n  singerImg?: string\r\n}\r\n\r\ninterface tableProps {\r\n  singerArr: Array<singer>,\r\n  onDelete: (e: MouseEvent<HTMLElement>, colObj: Object) => void,\r\n  onModify: (e: MouseEvent<HTMLElement>, colObj: Object) => void,\r\n}\r\n\r\nconst singerTable = (props: tableProps) => {\r\n\r\n  const { \r\n    singerArr = [],\r\n    onDelete = () => {},\r\n    onModify = () => {}\r\n  } = props\r\n  const { Column } = Table\r\n  return (\r\n    <Table dataSource={singerArr} >\r\n\r\n      <Column title=\"姓名\" dataIndex=\"singerName\" key=\"singerName\"/>\r\n      <Column title=\"描述\" dataIndex=\"singerDescription\" key=\"singerDescription\"/>\r\n      <Column\r\n        title=\"Action\"\r\n        key=\"action\"\r\n        render={(text, record: any) => (\r\n          <Space size=\"middle\">\r\n            <a onClick={(e) => onModify(e, record)}>查看</a>\r\n            <a onClick={(e) => onDelete(e, record)}>删除</a>\r\n          </Space>\r\n        )}\r\n      />\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default singerTable\r\n\r\n\r\n\r\n",["50","51"],"E:\\javascript\\artMemory\\src\\pages\\singerdetail\\components\\singerModal\\index.tsx",["52","53","54"],"import React, {useState, ChangeEvent, KeyboardEvent, MouseEvent} from 'react';\r\n// import InfoForm from '../infoForm/index'\r\nimport { Form, Input, Button, Upload, Modal } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport apiObj from '../../../../api/config' \r\n\r\n// 1-1. 姓名  singerName\r\n// 1-2. 描述  singerDescription\r\n// 1-3. 图片  singerImg\r\n// 1-4. 是否显示 isShow\r\n\r\n// 事件\r\n// 2-1 确认保存 onConfirm\r\n// 2-2 取消 onCancel \r\n\r\ninterface singerModal {\r\n  isShow: boolean,\r\n  singerName: string,\r\n  singerDescription: string,\r\n  singerImg: string,\r\n  onInputChange: (e: ChangeEvent<HTMLInputElement>, type: string) => void,\r\n  onConfirm: () => void,\r\n  onCancel: (e: MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst SingerModal = (props: singerModal) => {\r\n\r\n  const { \r\n    isShow = false, \r\n    singerName = '', \r\n    singerDescription = '',\r\n    singerImg = '',\r\n    onInputChange = () => {},\r\n    onConfirm = () => {},\r\n    onCancel = () => {}\r\n  } = props\r\n\r\n \r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"添加歌手\"\r\n        visible={isShow}\r\n        maskClosable={false}\r\n        onOk={onConfirm}\r\n        onCancel={onCancel}\r\n      >\r\n        {singerName}\r\n        {singerDescription}\r\n        {singerImg}\r\n        <Form>\r\n          <Form.Item\r\n              label=\"singerName\"\r\n              name=\"singerName\"\r\n              rules={[{required: true, message: '请输入姓名'}]}>\r\n              <Input  \r\n              placeholder=\"Basic usage\"\r\n              \tvalue={singerName}\r\n                onChange={(e) => onInputChange(e, 'singerName')}\r\n                allowClear={true}/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n              label=\"singerDescription\"\r\n              name=\"singerDescription\">\r\n              <Input\r\n                value={ singerDescription}\r\n                onChange={(e) => onInputChange(e, 'singerDescription')}\r\n                allowClear={true}\r\n              />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n                  <Button icon={<UploadOutlined />}>点击上传</Button>\r\n              </Upload>\r\n          </Form.Item>\r\n        \r\n\r\n      </Form>\r\n\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingerModal",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":24,"nodeType":"61","messageId":"62","endLine":4,"endColumn":34},{"ruleId":"59","severity":1,"message":"63","line":9,"column":9,"nodeType":"61","messageId":"62","endLine":9,"endColumn":15},{"ruleId":"59","severity":1,"message":"64","line":27,"column":26,"nodeType":"61","messageId":"62","endLine":27,"endColumn":32},{"ruleId":"59","severity":1,"message":"65","line":56,"column":9,"nodeType":"61","messageId":"62","endLine":56,"endColumn":12},{"ruleId":"59","severity":1,"message":"66","line":72,"column":11,"nodeType":"61","messageId":"62","endLine":72,"endColumn":16},{"ruleId":"59","severity":1,"message":"65","line":81,"column":13,"nodeType":"61","messageId":"62","endLine":81,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":41,"column":13,"nodeType":"69","endLine":41,"endColumn":53},{"ruleId":"67","severity":1,"message":"68","line":42,"column":13,"nodeType":"69","endLine":42,"endColumn":53},{"ruleId":"55","replacedBy":"70"},{"ruleId":"57","replacedBy":"71"},{"ruleId":"59","severity":1,"message":"72","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"73","line":1,"column":39,"nodeType":"61","messageId":"62","endLine":1,"endColumn":52},{"ruleId":"59","severity":1,"message":"74","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":14},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","'setImg' is assigned a value but never used.","'res' is assigned a value but never used.","'modal' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["75"],["76"],"'useState' is defined but never used.","'KeyboardEvent' is defined but never used.","'apiObj' is defined but never used.","no-global-assign","no-unsafe-negation"]